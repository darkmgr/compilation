Grammaire

    0 $accept: axiom $end

    1 axiom: listeInstructions '\n'

    2 listeInstructions: instruction ';'
    3                  | instruction ';' listeInstructions

    4 instruction: varDeclaration
    5            | assignationExpression
    6            | declarationTableau

    7 varDeclaration: typeVar IDENTIFIER

    8 typeVar: INT

    9 crochets: '[' INTEGER ']'

   10 multiCrochets: crochets multiCrochets
   11              | crochets crochets

   12 listeNombre: INTEGER
   13            | INTEGER ',' listeNombre

   14 listeAccolade: '{' '}'
   15              | '{' listeNombre '}'
   16              | '{' listeAccolade ',' listeAccolade '}'

   17 declarationTableau: varDeclaration multiCrochets '=' listeAccolade
   18                   | varDeclaration multiCrochets
   19                   | IDENTIFIER '=' listeAccolade

   20 assignationExpression: varDeclaration '=' expression
   21                      | IDENTIFIER '=' expression

   22 variable: IDENTIFIER
   23         | INTEGER

   24 expression: expression '+' expression
   25           | expression '-' expression
   26           | expression '*' expression
   27           | expression '/' expression
   28           | '(' expression ')'
   29           | variable


Terminaux, suivis des règles où ils apparaissent

$end (0) 0
'\n' (10) 1
'(' (40) 28
')' (41) 28
'*' (42) 26
'+' (43) 24
',' (44) 13 16
'-' (45) 25
'/' (47) 27
';' (59) 2 3
'=' (61) 17 19 20 21
'[' (91) 9
']' (93) 9
'{' (123) 14 15 16
'}' (125) 14 15 16
error (256)
INTEGER (258) 9 12 13 23
IDENTIFIER (259) 7 19 21 22
INT (260) 8


Non-terminaux, suivis des règles où ils apparaissent

$accept (20)
    à gauche: 0
axiom (21)
    à gauche: 1, à droite: 0
listeInstructions (22)
    à gauche: 2 3, à droite: 1 3
instruction (23)
    à gauche: 4 5 6, à droite: 2 3
varDeclaration (24)
    à gauche: 7, à droite: 4 17 18 20
typeVar (25)
    à gauche: 8, à droite: 7
crochets (26)
    à gauche: 9, à droite: 10 11
multiCrochets (27)
    à gauche: 10 11, à droite: 10 17 18
listeNombre (28)
    à gauche: 12 13, à droite: 13 15
listeAccolade (29)
    à gauche: 14 15 16, à droite: 16 17 19
declarationTableau (30)
    à gauche: 17 18 19, à droite: 6
assignationExpression (31)
    à gauche: 20 21, à droite: 5
variable (32)
    à gauche: 22 23, à droite: 29
expression (33)
    à gauche: 24 25 26 27 28 29, à droite: 20 21 24 25 26 27 28


État 0

    0 $accept: . axiom $end

    IDENTIFIER  décalage et aller à l'état 1
    INT         décalage et aller à l'état 2

    axiom                  aller à l'état 3
    listeInstructions      aller à l'état 4
    instruction            aller à l'état 5
    varDeclaration         aller à l'état 6
    typeVar                aller à l'état 7
    declarationTableau     aller à l'état 8
    assignationExpression  aller à l'état 9


État 1

   19 declarationTableau: IDENTIFIER . '=' listeAccolade
   21 assignationExpression: IDENTIFIER . '=' expression

    '='  décalage et aller à l'état 10


État 2

    8 typeVar: INT .

    $défaut  réduction par utilisation de la règle 8 (typeVar)


État 3

    0 $accept: axiom . $end

    $end  décalage et aller à l'état 11


État 4

    1 axiom: listeInstructions . '\n'

    '\n'  décalage et aller à l'état 12


État 5

    2 listeInstructions: instruction . ';'
    3                  | instruction . ';' listeInstructions

    ';'  décalage et aller à l'état 13


État 6

    4 instruction: varDeclaration .
   17 declarationTableau: varDeclaration . multiCrochets '=' listeAccolade
   18                   | varDeclaration . multiCrochets
   20 assignationExpression: varDeclaration . '=' expression

    '='  décalage et aller à l'état 14
    '['  décalage et aller à l'état 15

    $défaut  réduction par utilisation de la règle 4 (instruction)

    crochets       aller à l'état 16
    multiCrochets  aller à l'état 17


État 7

    7 varDeclaration: typeVar . IDENTIFIER

    IDENTIFIER  décalage et aller à l'état 18


État 8

    6 instruction: declarationTableau .

    $défaut  réduction par utilisation de la règle 6 (instruction)


État 9

    5 instruction: assignationExpression .

    $défaut  réduction par utilisation de la règle 5 (instruction)


État 10

   19 declarationTableau: IDENTIFIER '=' . listeAccolade
   21 assignationExpression: IDENTIFIER '=' . expression

    INTEGER     décalage et aller à l'état 19
    IDENTIFIER  décalage et aller à l'état 20
    '{'         décalage et aller à l'état 21
    '('         décalage et aller à l'état 22

    listeAccolade  aller à l'état 23
    variable       aller à l'état 24
    expression     aller à l'état 25


État 11

    0 $accept: axiom $end .

    $défaut  accepter


État 12

    1 axiom: listeInstructions '\n' .

    $défaut  réduction par utilisation de la règle 1 (axiom)


État 13

    2 listeInstructions: instruction ';' .
    3                  | instruction ';' . listeInstructions

    IDENTIFIER  décalage et aller à l'état 1
    INT         décalage et aller à l'état 2

    $défaut  réduction par utilisation de la règle 2 (listeInstructions)

    listeInstructions      aller à l'état 26
    instruction            aller à l'état 5
    varDeclaration         aller à l'état 6
    typeVar                aller à l'état 7
    declarationTableau     aller à l'état 8
    assignationExpression  aller à l'état 9


État 14

   20 assignationExpression: varDeclaration '=' . expression

    INTEGER     décalage et aller à l'état 19
    IDENTIFIER  décalage et aller à l'état 20
    '('         décalage et aller à l'état 22

    variable    aller à l'état 24
    expression  aller à l'état 27


État 15

    9 crochets: '[' . INTEGER ']'

    INTEGER  décalage et aller à l'état 28


État 16

   10 multiCrochets: crochets . multiCrochets
   11              | crochets . crochets

    '['  décalage et aller à l'état 15

    crochets       aller à l'état 29
    multiCrochets  aller à l'état 30


État 17

   17 declarationTableau: varDeclaration multiCrochets . '=' listeAccolade
   18                   | varDeclaration multiCrochets .

    '='  décalage et aller à l'état 31

    $défaut  réduction par utilisation de la règle 18 (declarationTableau)


État 18

    7 varDeclaration: typeVar IDENTIFIER .

    $défaut  réduction par utilisation de la règle 7 (varDeclaration)


État 19

   23 variable: INTEGER .

    $défaut  réduction par utilisation de la règle 23 (variable)


État 20

   22 variable: IDENTIFIER .

    $défaut  réduction par utilisation de la règle 22 (variable)


État 21

   14 listeAccolade: '{' . '}'
   15              | '{' . listeNombre '}'
   16              | '{' . listeAccolade ',' listeAccolade '}'

    INTEGER  décalage et aller à l'état 32
    '{'      décalage et aller à l'état 21
    '}'      décalage et aller à l'état 33

    listeNombre    aller à l'état 34
    listeAccolade  aller à l'état 35


État 22

   28 expression: '(' . expression ')'

    INTEGER     décalage et aller à l'état 19
    IDENTIFIER  décalage et aller à l'état 20
    '('         décalage et aller à l'état 22

    variable    aller à l'état 24
    expression  aller à l'état 36


État 23

   19 declarationTableau: IDENTIFIER '=' listeAccolade .

    $défaut  réduction par utilisation de la règle 19 (declarationTableau)


État 24

   29 expression: variable .

    $défaut  réduction par utilisation de la règle 29 (expression)


État 25

   21 assignationExpression: IDENTIFIER '=' expression .
   24 expression: expression . '+' expression
   25           | expression . '-' expression
   26           | expression . '*' expression
   27           | expression . '/' expression

    '+'  décalage et aller à l'état 37
    '-'  décalage et aller à l'état 38
    '*'  décalage et aller à l'état 39
    '/'  décalage et aller à l'état 40

    $défaut  réduction par utilisation de la règle 21 (assignationExpression)


État 26

    3 listeInstructions: instruction ';' listeInstructions .

    $défaut  réduction par utilisation de la règle 3 (listeInstructions)


État 27

   20 assignationExpression: varDeclaration '=' expression .
   24 expression: expression . '+' expression
   25           | expression . '-' expression
   26           | expression . '*' expression
   27           | expression . '/' expression

    '+'  décalage et aller à l'état 37
    '-'  décalage et aller à l'état 38
    '*'  décalage et aller à l'état 39
    '/'  décalage et aller à l'état 40

    $défaut  réduction par utilisation de la règle 20 (assignationExpression)


État 28

    9 crochets: '[' INTEGER . ']'

    ']'  décalage et aller à l'état 41


État 29

   10 multiCrochets: crochets . multiCrochets
   11              | crochets . crochets
   11              | crochets crochets .

    '['  décalage et aller à l'état 15

    $défaut  réduction par utilisation de la règle 11 (multiCrochets)

    crochets       aller à l'état 29
    multiCrochets  aller à l'état 30


État 30

   10 multiCrochets: crochets multiCrochets .

    $défaut  réduction par utilisation de la règle 10 (multiCrochets)


État 31

   17 declarationTableau: varDeclaration multiCrochets '=' . listeAccolade

    '{'  décalage et aller à l'état 21

    listeAccolade  aller à l'état 42


État 32

   12 listeNombre: INTEGER .
   13            | INTEGER . ',' listeNombre

    ','  décalage et aller à l'état 43

    $défaut  réduction par utilisation de la règle 12 (listeNombre)


État 33

   14 listeAccolade: '{' '}' .

    $défaut  réduction par utilisation de la règle 14 (listeAccolade)


État 34

   15 listeAccolade: '{' listeNombre . '}'

    '}'  décalage et aller à l'état 44


État 35

   16 listeAccolade: '{' listeAccolade . ',' listeAccolade '}'

    ','  décalage et aller à l'état 45


État 36

   24 expression: expression . '+' expression
   25           | expression . '-' expression
   26           | expression . '*' expression
   27           | expression . '/' expression
   28           | '(' expression . ')'

    '+'  décalage et aller à l'état 37
    '-'  décalage et aller à l'état 38
    '*'  décalage et aller à l'état 39
    '/'  décalage et aller à l'état 40
    ')'  décalage et aller à l'état 46


État 37

   24 expression: expression '+' . expression

    INTEGER     décalage et aller à l'état 19
    IDENTIFIER  décalage et aller à l'état 20
    '('         décalage et aller à l'état 22

    variable    aller à l'état 24
    expression  aller à l'état 47


État 38

   25 expression: expression '-' . expression

    INTEGER     décalage et aller à l'état 19
    IDENTIFIER  décalage et aller à l'état 20
    '('         décalage et aller à l'état 22

    variable    aller à l'état 24
    expression  aller à l'état 48


État 39

   26 expression: expression '*' . expression

    INTEGER     décalage et aller à l'état 19
    IDENTIFIER  décalage et aller à l'état 20
    '('         décalage et aller à l'état 22

    variable    aller à l'état 24
    expression  aller à l'état 49


État 40

   27 expression: expression '/' . expression

    INTEGER     décalage et aller à l'état 19
    IDENTIFIER  décalage et aller à l'état 20
    '('         décalage et aller à l'état 22

    variable    aller à l'état 24
    expression  aller à l'état 50


État 41

    9 crochets: '[' INTEGER ']' .

    $défaut  réduction par utilisation de la règle 9 (crochets)


État 42

   17 declarationTableau: varDeclaration multiCrochets '=' listeAccolade .

    $défaut  réduction par utilisation de la règle 17 (declarationTableau)


État 43

   13 listeNombre: INTEGER ',' . listeNombre

    INTEGER  décalage et aller à l'état 32

    listeNombre  aller à l'état 51


État 44

   15 listeAccolade: '{' listeNombre '}' .

    $défaut  réduction par utilisation de la règle 15 (listeAccolade)


État 45

   16 listeAccolade: '{' listeAccolade ',' . listeAccolade '}'

    '{'  décalage et aller à l'état 21

    listeAccolade  aller à l'état 52


État 46

   28 expression: '(' expression ')' .

    $défaut  réduction par utilisation de la règle 28 (expression)


État 47

   24 expression: expression . '+' expression
   24           | expression '+' expression .
   25           | expression . '-' expression
   26           | expression . '*' expression
   27           | expression . '/' expression

    '*'  décalage et aller à l'état 39
    '/'  décalage et aller à l'état 40

    $défaut  réduction par utilisation de la règle 24 (expression)


État 48

   24 expression: expression . '+' expression
   25           | expression . '-' expression
   25           | expression '-' expression .
   26           | expression . '*' expression
   27           | expression . '/' expression

    '*'  décalage et aller à l'état 39
    '/'  décalage et aller à l'état 40

    $défaut  réduction par utilisation de la règle 25 (expression)


État 49

   24 expression: expression . '+' expression
   25           | expression . '-' expression
   26           | expression . '*' expression
   26           | expression '*' expression .
   27           | expression . '/' expression

    $défaut  réduction par utilisation de la règle 26 (expression)


État 50

   24 expression: expression . '+' expression
   25           | expression . '-' expression
   26           | expression . '*' expression
   27           | expression . '/' expression
   27           | expression '/' expression .

    $défaut  réduction par utilisation de la règle 27 (expression)


État 51

   13 listeNombre: INTEGER ',' listeNombre .

    $défaut  réduction par utilisation de la règle 13 (listeNombre)


État 52

   16 listeAccolade: '{' listeAccolade ',' listeAccolade . '}'

    '}'  décalage et aller à l'état 53


État 53

   16 listeAccolade: '{' listeAccolade ',' listeAccolade '}' .

    $défaut  réduction par utilisation de la règle 16 (listeAccolade)
